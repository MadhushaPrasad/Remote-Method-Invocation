/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import connector.ProxyHandler;
import controller.CustomerController;
import controller.InvoiceController;
import controller.ItemController;
import dto.CustomerDTO;
import dto.ItemDTO;
import dto.OrderDTO;
import dto.OrderDetailsDTO;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import observer.Observer;
import service.SuperService;
import service.custom.PurchaseOrderService;

/**
 *
 * @author sanuak
 */
public class InvoiceForm extends javax.swing.JFrame implements Observer {

    DefaultTableModel dtm;

    /**
     * Creates new form InvoiceForm
     */
    public InvoiceForm() {
        try {
            UnicastRemoteObject.exportObject(this, 0);
            initComponents();
            PurchaseOrderService proxy = (PurchaseOrderService) ProxyHandler.getInstance().getProxy(ProxyHandler.ProxyTypes.PO);
            proxy.register(this);
            dtm = (DefaultTableModel) tblCustomer.getModel();
            loadOrdeID();
            setDate();
            loadAllCustomers();
            loadAllItems();
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtOrderID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtOrderDate = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        txtItemCode = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtItemName = new javax.swing.JTextField();
        txtItemQty = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cmbItemCode = new javax.swing.JComboBox<String>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtItemUPrice = new javax.swing.JTextField();
        txtQty = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtCusID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCustomerName = new javax.swing.JTextField();
        txtCustomerAddress = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cmbCustomerID = new javax.swing.JComboBox<String>();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtPaidAmount = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtBalance = new javax.swing.JTextField();
        btnRemove = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        lblSubTotal = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();
        btnProceed = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(799, 560));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(254, 254, 254));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtOrderID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrderIDActionPerformed(evt);
            }
        });
        jPanel1.add(txtOrderID, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 30));

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(41, 38, 38));
        jLabel1.setText("Order ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(41, 38, 38));
        jLabel2.setText("Order Date");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1, -1));
        jPanel1.add(txtOrderDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 150, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 390, 70));

        jPanel3.setBackground(new java.awt.Color(254, 254, 254));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtItemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemCodeActionPerformed(evt);
            }
        });
        jPanel3.add(txtItemCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 150, 30));

        jLabel7.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(41, 38, 38));
        jLabel7.setText("Select Item");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel8.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(41, 38, 38));
        jLabel8.setText("Item Name");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));
        jPanel3.add(txtItemName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 150, 30));
        jPanel3.add(txtItemQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 150, 30));

        jLabel9.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(41, 38, 38));
        jLabel9.setText("Qty Available");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, -1, -1));

        cmbItemCode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItemCodeItemStateChanged(evt);
            }
        });
        jPanel3.add(cmbItemCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 30));

        jLabel10.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(41, 38, 38));
        jLabel10.setText("Search From Code");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1, -1));

        jLabel11.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(41, 38, 38));
        jLabel11.setText("Unit Price");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));
        jPanel3.add(txtItemUPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 150, 30));

        txtQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtyActionPerformed(evt);
            }
        });
        jPanel3.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 150, 30));

        jLabel13.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(41, 38, 38));
        jLabel13.setText("Qty");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, -1, -1));

        jButton1.setBackground(new java.awt.Color(5, 130, 254));
        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, -1, 20));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 380, 220));

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCusID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCusIDActionPerformed(evt);
            }
        });
        jPanel2.add(txtCusID, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 150, 30));

        jLabel3.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(41, 38, 38));
        jLabel3.setText("Select Customer");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel4.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(41, 38, 38));
        jLabel4.setText("Customer Name");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));
        jPanel2.add(txtCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 150, 30));
        jPanel2.add(txtCustomerAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 150, 30));

        jLabel5.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(41, 38, 38));
        jLabel5.setText("Customer Address");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, -1, -1));

        cmbCustomerID.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCustomerIDItemStateChanged(evt);
            }
        });
        cmbCustomerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCustomerIDActionPerformed(evt);
            }
        });
        jPanel2.add(cmbCustomerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, 30));

        jLabel6.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(41, 38, 38));
        jLabel6.setText("Search From ID");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1, -1));

        jButton2.setBackground(new java.awt.Color(5, 130, 254));
        jButton2.setText("+");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 10, -1, 20));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 390, 140));

        jPanel4.setBackground(new java.awt.Color(254, 254, 254));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ICode", "ItemName", "UnitPrice", "Qty", "Total"
            }
        ));
        jScrollPane1.setViewportView(tblCustomer);

        jPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 590, 210));

        jLabel12.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(41, 38, 38));
        jLabel12.setText("RS:");
        jLabel12.setToolTipText("");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(615, 40, -1, -1));

        lblTotal.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(41, 38, 38));
        lblTotal.setText("00000.00");
        jPanel4.add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(638, 35, 120, -1));

        jLabel15.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(41, 38, 38));
        jLabel15.setText("SubTotal:");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 230, -1, -1));

        jLabel16.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(41, 38, 38));
        jLabel16.setText("Discount %");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 70, -1, -1));

        txtDiscount.setText("0");
        txtDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiscountActionPerformed(evt);
            }
        });
        jPanel4.add(txtDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 90, 150, -1));

        jLabel17.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(41, 38, 38));
        jLabel17.setText("Paid Amount");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 120, -1, -1));

        txtPaidAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaidAmountActionPerformed(evt);
            }
        });
        jPanel4.add(txtPaidAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 140, 150, -1));

        jLabel18.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(41, 38, 38));
        jLabel18.setText("Balance");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 170, -1, -1));
        jPanel4.add(txtBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 190, 150, -1));

        btnRemove.setText("-");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });
        jPanel4.add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 40, 20));

        jLabel19.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(41, 38, 38));
        jLabel19.setText("Total");
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 15, -1, -1));

        lblSubTotal.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        lblSubTotal.setForeground(new java.awt.Color(41, 38, 38));
        lblSubTotal.setText("00000.00");
        jPanel4.add(lblSubTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, -1, -1));

        jLabel21.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(41, 38, 38));
        jLabel21.setText("RS:");
        jPanel4.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 230, -1, -1));

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel4.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 230, 60, -1));

        btnProceed.setText("Proceed");
        btnProceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProceedActionPerformed(evt);
            }
        });
        jPanel4.add(btnProceed, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 230, 110, -1));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 780, 270));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new ItemForm().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmbCustomerIDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCustomerIDItemStateChanged
        try {
            String customerID = cmbCustomerID.getSelectedItem().toString();

            CustomerDTO searcCustomer = new CustomerController().searchCustomer(customerID);
            txtCusID.setText(searcCustomer.getId());
            txtCustomerName.setText(searcCustomer.getName());
            txtCustomerAddress.setText(searcCustomer.getAddress());

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_cmbCustomerIDItemStateChanged

    private void cmbCustomerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCustomerIDActionPerformed

    }//GEN-LAST:event_cmbCustomerIDActionPerformed

    private void txtCusIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCusIDActionPerformed
        try {
            String customerID = txtCusID.getText();
            CustomerDTO searchCustomer = new CustomerController().searchCustomer(customerID);
            if (searchCustomer != null) {
                txtCusID.setText(searchCustomer.getId());
                txtCustomerName.setText(searchCustomer.getName());
                txtCustomerAddress.setText(searchCustomer.getAddress());
                cmbCustomerID.setSelectedItem(searchCustomer.getId());
            } else {
                JOptionPane.showMessageDialog(this, "No Such Customer", "Warning", JOptionPane.ERROR_MESSAGE);
                clearCustomer();
            }

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Eroor", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_txtCusIDActionPerformed

    private void cmbItemCodeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItemCodeItemStateChanged
        String selectedItem = cmbItemCode.getSelectedItem().toString();
        try {
            ItemDTO searchItem = new ItemController().searchItem(selectedItem);
            txtItemCode.setText(searchItem.getCode());
            txtItemName.setText(searchItem.getDescription());
            txtItemQty.setText(searchItem.getQtyOnHand() + "");
            txtItemUPrice.setText(searchItem.getUnitPrice() + "");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_cmbItemCodeItemStateChanged

    private void txtItemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemCodeActionPerformed
        try {
            String itemCode = txtItemCode.getText();
            ItemDTO searchItem = new ItemController().searchItem(itemCode);
            if (searchItem != null) {
                txtItemCode.setText(searchItem.getCode());
                txtItemName.setText(searchItem.getDescription());
                txtItemQty.setText(searchItem.getQtyOnHand() + "");
                txtItemUPrice.setText(searchItem.getUnitPrice() + "");
                cmbItemCode.setSelectedItem(searchItem.getCode());
            } else {
                clearAllItems();
                JOptionPane.showMessageDialog(this, "No Such Item", "Warning", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_txtItemCodeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new CustomerForm().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtyActionPerformed
        try {
            int stockAmount = Integer.parseInt(txtItemQty.getText());
            int purchaseAmount = Integer.parseInt(txtQty.getText());
            if (stockAmount >= purchaseAmount) {

//            gather details  for orderdetails table
                String itemCode = cmbItemCode.getSelectedItem().toString();
                String itemName = txtItemName.getText();
                double unitPrice = Double.parseDouble(txtItemUPrice.getText());
                double totalPrice = unitPrice * purchaseAmount;
                if (checkItemDuplicates(itemCode)) {
                    Object[] rowData = {itemCode, itemName, unitPrice, purchaseAmount, totalPrice};
                    dtm.addRow(rowData);
                }
                calculateTotal();
            } else {
                JOptionPane.showMessageDialog(this, "Stock Out Please Contact Supplier", "Warning", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            txtQty.setText("");
        }
    }//GEN-LAST:event_txtQtyActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int selectedRow = tblCustomer.getSelectedRow();
        dtm.removeRow(selectedRow);
        calculateTotal();
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void txtDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiscountActionPerformed
        double discount = Double.parseDouble(txtDiscount.getText());
        double fixTotal = Double.parseDouble(lblTotal.getText());

//        calculation
        double total = ((100 - discount) * fixTotal) / 100;
        lblSubTotal.setText(total + "");

    }//GEN-LAST:event_txtDiscountActionPerformed

    private void txtPaidAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaidAmountActionPerformed
        double totaltopay = Double.parseDouble(lblSubTotal.getText());
        double paidAmount = Double.parseDouble(txtPaidAmount.getText());
        if (paidAmount >= totaltopay) {
            double balance = paidAmount - totaltopay;
            txtBalance.setText(balance + "");

        } else {
            JOptionPane.showMessageDialog(this, "Less Than Total Payment");
        }
    }//GEN-LAST:event_txtPaidAmountActionPerformed

    @SuppressWarnings("unchecked")
    private void btnProceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProceedActionPerformed

        try {
            //        details for order table
            String orderID = txtOrderID.getText();
            String date = txtOrderDate.getText();
            String customerID = cmbCustomerID.getSelectedItem().toString();
            String customerName = txtCustomerName.getText();
            double total = Double.parseDouble(lblTotal.getText());
            double discount = Double.parseDouble(txtDiscount.getText());
            double paid = Double.parseDouble(txtPaidAmount.getText());
            double balance = Double.parseDouble(txtBalance.getText());
            double subtotal = Double.parseDouble(lblSubTotal.getText());

            ArrayList<OrderDetailsDTO> allOrderDetails = new ArrayList<>();

            for (int i = 0; i < dtm.getRowCount(); i++) {
                String itemCode = dtm.getValueAt(i, 0).toString();
                int qty = Integer.parseInt(dtm.getValueAt(i, 3).toString());
                double unitPrice = Double.parseDouble(dtm.getValueAt(i, 2).toString());
                OrderDetailsDTO orderDetail = new OrderDetailsDTO(orderID, itemCode, qty, unitPrice);
                allOrderDetails.add(orderDetail);
            }
            OrderDTO orders = new OrderDTO(orderID, date, customerID, allOrderDetails);
            boolean purchaseOrder = new InvoiceController().purchaseOrder(orders);
            if (purchaseOrder) {
                JOptionPane.showMessageDialog(this, "Order Placed");

                clearAll();
                loadOrdeID();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }


    }//GEN-LAST:event_btnProceedActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearAll();
        loadOrdeID();

    }//GEN-LAST:event_btnClearActionPerformed

    private void txtOrderIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrderIDActionPerformed
//        try {
//            String orderID = txtOrderID.getText();
//            ArrayList<CustomEntity> searchOrders = InvoiceController.searchOrders(orderID);
//            dtm.setRowCount(0);
//            String customerID = null;
//            for (CustomEntity s : searchOrders) {
//                Object[] rowData = {s.getItemCode(), "", s.getUnitPrice(), s.getQty(), (s.getUnitPrice() * s.getQty())};
//                dtm.addRow(rowData);
//                calculateTotal();
//                customerID = s.getCustomerID();
//            }
//            CustomerDTO searcCustomer = CustomerController.searchCustomer(customerID);
//            txtCusID.setText(searcCustomer.getId());
//            txtCustomerName.setText(searcCustomer.getName());
//            txtCustomerAddress.setText(searcCustomer.getAddress());
//        } catch (Exception ex) {
//            Logger.getLogger(InvoiceForm.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_txtOrderIDActionPerformed

    private boolean checkItemDuplicates(String itemCode) {
        for (int i = 0; i < dtm.getRowCount(); i++) {
            String itemsCode = dtm.getValueAt(i, 0).toString();
            if (itemsCode == itemCode) {
//                update table qty
                double unitPrice = Double.parseDouble(dtm.getValueAt(i, 2).toString()); //unit Price
                int oldQty = Integer.parseInt(dtm.getValueAt(i, 3).toString()); //qty
//                double oldTotal = Double.parseDouble(dtm.getValueAt(i, 4).toString()); //total
                int newQty = Integer.parseInt(txtQty.getText()) + oldQty;
                double newTotal = newQty * unitPrice;
                dtm.setValueAt(newQty, i, 3);
                dtm.setValueAt(newTotal, i, 4);
                return false;
            }
        }
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InvoiceForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnProceed;
    private javax.swing.JButton btnRemove;
    private javax.swing.JComboBox<String> cmbCustomerID;
    private javax.swing.JComboBox<String> cmbItemCode;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSubTotal;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblCustomer;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextField txtCusID;
    private javax.swing.JTextField txtCustomerAddress;
    private javax.swing.JTextField txtCustomerName;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtItemQty;
    private javax.swing.JTextField txtItemUPrice;
    private javax.swing.JTextField txtOrderDate;
    private javax.swing.JTextField txtOrderID;
    private javax.swing.JTextField txtPaidAmount;
    private javax.swing.JTextField txtQty;
    // End of variables declaration//GEN-END:variables

    private void loadOrdeID() {
        int i = new Random().nextInt(90000);
        txtOrderID.setText("OID" + i);
    }

    private void setDate() {
        txtOrderDate.setText(LocalDate.now().toString());
    }

    private void loadAllCustomers() {
        try {
            ArrayList<CustomerDTO> allCustomers = new CustomerController().getAllCustomers();
            for (CustomerDTO allCustomer : allCustomers) {
                cmbCustomerID.addItem(allCustomer.getId());
            }

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }

    public void clearCustomer() {
        txtCusID.setText("");
        txtCustomerAddress.setText("");
        txtCustomerName.setText("");
    }

    public void clearAllItems() {
        txtItemCode.setText("");
        txtItemName.setText("");
        txtItemQty.setText("");
        txtItemUPrice.setText("");
    }

    private void loadAllItems() {
        try {
            ArrayList<ItemDTO> allItems = new ItemController().getAllItems();
            for (ItemDTO allItem : allItems) {
                cmbItemCode.addItem(allItem.getCode());
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }

    public void calculateTotal() {

        double temptotal = 0;
        for (int i = 0; i < dtm.getRowCount(); i++) {
            double total = Double.parseDouble(dtm.getValueAt(i, 4).toString());
            temptotal = temptotal + total;
        }
        lblTotal.setText(temptotal + "");

        double discount = Double.parseDouble(txtDiscount.getText());
        double fixTotal = Double.parseDouble(lblTotal.getText());

//        calculation
        double total = ((100 - discount) * fixTotal) / 100;
        lblSubTotal.setText(total + "");

    }

    private void clearAll() {
        clearAllItems();
        clearCustomer();
        dtm.setRowCount(0);
        txtBalance.setText("");
        txtDiscount.setText(0 + "");
        txtPaidAmount.setText("");
        txtQty.setText("");
        calculateTotal();

    }

    @Override
    public void update(String message) throws Exception {
        JOptionPane.showMessageDialog(rootPane, message);
    }

}
